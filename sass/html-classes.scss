@import 'settings.scss';

@mixin generate-grid {

  @each $wide in $wides {
    [class*="#{$wide} wide column"] {
      @include get-wide-settings($wide);
    }
    [class$="offset #{$wide} column"] {
      @include get-offset-value($wide);
    }
  }

  @media all and (min-width: 1px){
    @each $wide in $wides {
      [class*="#{$wide} wide on mobile"].column {
        @include get-wide-settings($wide);
      }
      [class*="offset #{$wide} on mobile"].column {
        @include get-offset-value($wide);
      }
    }
  }

  @media all and (min-width: $min-tablet-width) {
    @each $wide in $wides {
      [class*="#{$wide} wide on tablet"].column {
        @include get-wide-settings($wide);
      }
      [class*="offset #{$wide} on tablet"].column {
        @include get-offset-value($wide);
      }
    }
  }

  @media all and (min-width: $min-desktop-width) {
    @each $wide in $wides {
      [class*="#{$wide} wide on desktop"].column {
        @include get-wide-settings($wide);
      }
      [class*="offset #{$wide} on desktop"].column {
        @include get-offset-value($wide);
      }
    }
  }
}


.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  box-sizing: border-box;

  .column {
    box-sizing: border-box;
    max-width: 100%;
  }

  &.centered {
    text-align: center;
  }
  
  &.centered:not([class*="only text"]) {
    justify-content: center;
  }

  &.all.centered {
    align-items: center;
  }
  
  &.reversed {
    flex-direction: row-reverse;
  }
  
  &:not(.column) .column:not(.wide) {
    flex: 1;
  }
  
  .fill.column {
    flex: 1;
  }
  
  .container {
    max-width: 100%;
        width: 90%;
    margin: 0 auto;
    box-sizing: border-box;
  }
  
  .fluid.container {
    width: 100%;
  }

  @include generate-grid();

  @function flexWidth( $number ) {
    @return 0 ( 12/ $number ) * $one-wide;
  }

  $count: length($wides);

  @each $wide in $wides {
    &[class*="#{$wide} column"] .column {
      flex: flexWidth($count);
    }
    $count: $count - 1;
  }
  
  @media all and (max-width: $min-desktop-width - .1em){
    &.stackable .column {
      flex: 0 100%;
    }
  
    &.reversed.stackable {
      flex-direction: column-reverse;
    }

    [class*="fill on mobile"].column {
      flex: 1 !important;
    }

    [class*="desktop only"].column,
    [class*="tablet only"].column,
    [class*="tablet and desktop only"].column {
      display: none;
    }

    [class*="mobile and tablet only"].column,
    [class*="mobile and desktop only"].column {
      display: block;
    }
  }

  @media all and (min-width: $min-tablet-width) and (max-width: $min-desktop-width - .1em) {
    [class*="fill on tablet"].column {
      flex: 1 !important;
    }

    [class*="mobile only"].column,
    [class*="desktop only"].column,
    [class*="mobile and desktop only"].column {
      display: none;
    }

    [class*="tablet only"].column {
      display: block;
    }

    [class*="mobile and tablet only"].column,
    [class*="tablet and desktop only"].column {
      display: block;
    }
  }

  @media all and (min-width: $min-tablet-width) {
    [class*="offset zero on tablet"].column {
      margin-left: 0;
    }
  }
  
  @media all and (min-width: $min-desktop-width) {
    [class*="fill on desktop"].column {
      flex: 1 !important;
    }

    [class*="mobile only"].column,
    [class*="tablet only"].column,
    [class*="mobile and tablet only"].column  {
      display: none;
    }

    [class*="desktop only"].column {
      display: block;
    }

    [class*="mobile and desktop only"].column,
    [class*="tablet and desktop only"].column {
      display: block;
    }

    [class*="offset zero on desktop"].column {
      margin-left: 0;
    }
  }
  
  @media all and (max-width: $min-desktop-width - .1em){
    &.stackable .column {
      flex: 0 100%;
    }
  
    &.reversed.stackable {
      flex-direction: column-reverse;
    }

    [class*="fill on mobile"].column {
      flex: 1 !important;
    }

    [class*="desktop only"].column,
    [class*="tablet only"].column,
    [class*="tablet and desktop only"].column {
      display: none;
    }

    [class*="mobile and tablet only"].column,
    [class*="mobile and desktop only"].column {
      display: block;
    }
  }

  @media all and (min-width: $min-tablet-width) and (max-width: $min-desktop-width - .1em) {
    [class*="fill on tablet"].column {
      flex: 1 !important;
    }

    [class*="mobile only"].column,
    [class*="desktop only"].column,
    [class*="mobile and desktop only"].column {
      display: none;
    }

    [class*="tablet only"].column {
      display: block;
    }

    [class*="mobile and tablet only"].column,
    [class*="tablet and desktop only"].column {
      display: block;
    }
  }

  @media all and (min-width: $min-tablet-width) {
    [class*="offset zero on tablet"].column {
      margin-left: 0;
    }
  }
  
  @media all and (min-width: $min-desktop-width) {
    [class*="fill on desktop"].column {
      flex: 1 !important;
    }

    [class*="mobile only"].column,
    [class*="tablet only"].column,
    [class*="mobile and tablet only"].column  {
      display: none;
    }

    [class*="desktop only"].column {
      display: block;
    }

    [class*="mobile and desktop only"].column,
    [class*="tablet and desktop only"].column {
      display: block;
    }

    [class*="offset zero on desktop"].column {
      margin-left: 0;
    }
  }
  
}